name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB:  ${{secrets.DATABASE_NAME}}_test
        ports:
        - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v5
      - name: Intall python version 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      
      # - name: Run migrations
      #   run: alembic upgrade head

      - name: test with pytest
        run: |
          pip install pytest
          pytest
      
      # # ---- Docker build ----
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}} # DOCKER_HUB_USERNAME
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}} # DOCKER_HUB_ACCESS_TOKEN
      
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      
      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi:latest
      #     cache-from: type=gha
      #     cache-to: type=gha
      
      # - name: Image digest
      #   run: echo ${{steps.docker_build.outputs.digest}}

  deploy:
    environment:
      name: production
    env:
      PROD_HOST: ${{secrets.PROD_HOST}}
      PROD_USERNAME: ${{secrets.PROD_USERNAME}}
      PROD_PASSWORD: ${{secrets.PROD_PASSWORD}}

    
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: deploying to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          script: |
            cd app/src
            git pull
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api